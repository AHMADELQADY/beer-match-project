name: CI/CD for ML Model

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      # Step 4: Train model
      - name: Train model
        run: |
          python train.py

      # Step 5: Upload trained model
      - name: Upload trained model
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: random_forest_beer_model.pkl

      # Debugging ignored files
      - name: Check ignored files
        run: |
          echo "Checking if logs/*.txt are ignored:"
          git check-ignore -v logs/*.txt || echo "No files in logs/ are ignored"

      # Step 6: Debug file status before commit
      - name: Debug file status before committing logs
        run: |
          echo "Debugging file status before commit:"
          git status
          ls -l logs/

      # Step 7: Commit and push updated logs
      - name: Commit and push updated logs
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          echo "Configuring Git"
          git config --global user.email "elqadyahmed@gmail.com"
          git config --global user.name "AHMADELQADY"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/AHMADELQADY/beer-match-project.git
          echo "Stashing uncommitted changes"
          git stash || echo "No changes to stash"
          git pull origin main --rebase
          echo "Popping stashed changes"
          git stash pop || echo "No stash to apply"
          echo "Adding log files"
          git add -f logs/*.txt
          echo "Committing changes"
          git commit -m "Updated logs after CI/CD execution" || echo "No changes to commit"
          echo "Pushing changes to remote repository"
          git push origin main || echo "Push failed, please check permissions"

      # Step 8: Debug file status after commit
      - name: Debug file status after commit
        run: |
          echo "Debugging file status after commit:"
          git status
          git log -1
          ls -l logs/

      # Step 9: Verify state after push
      - name: Verify after push
        run: |
          echo "Verifying state after push:"
          git status
          echo "Checking last commit:"
          git log -1
          ls -l logs/

      # Step 10: Deployment step (placeholder)
      - name: Deploy model
        run: |
          echo "Deployment logic goes here. Example: Docker, Streamlit, or FastAPI."