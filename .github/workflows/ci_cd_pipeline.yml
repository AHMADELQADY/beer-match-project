name: CI/CD for ML Model

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Ensure directories have proper permissions
      - name: Ensure directory permissions
        run: |
          echo "Ensuring proper permissions for all directories..."
          mkdir -p mlruns mlartifacts logs
          chmod -R 755 mlruns
          chmod -R 755 mlartifacts
          chmod -R 755 logs
          ls -ld mlruns mlartifacts logs

      # 5. Train model
      - name: Train model
        run: |
          echo "Starting training process..."
          python train.py

      # 6. Debug file status before committing logs
      - name: Debug file status before committing logs
        run: |
          echo "Debugging file status before commit..."
          git status
          ls -l logs/

      # 7. Check ignored files
      - name: Check ignored files
        run: |
          echo "Checking if logs/*.txt are ignored..."
          git check-ignore logs/*.txt || echo "No files in logs/ are ignored."

      # 8. Stage log files
      - name: Stage log files
        run: |
          echo "Staging log files..."
          git add logs/*.txt
          git status

      # 9. Commit and push updated logs
      - name: Commit and push updated logs
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          echo "Configuring Git..."
          git config --global user.email "elqadyahmed@gmail.com"
          git config --global user.name "AHMADELQADY"
          echo "Committing and pushing logs..."
          git add logs/*.txt
          git commit -m "Updated logs after CI/CD execution" || echo "No changes to commit."
          git remote set-url origin https://AHMADELQADY:${{ secrets.GH_PAT }}@github.com/AHMADELQADY/beer-match-project.git
          git push origin main || echo "Push failed, please check permissions."

      # 10. Debug permissions and remote
      - name: Debug permissions and remote
        run: |
          echo "Debugging Git Remote and Permissions..."
          git remote -v
          git config --list

      # 11. Debug after push
      - name: Verify after push
        run: |
          echo "Verifying state after push..."
          git status
          echo "Checking last commit..."
          git log -1
          ls -l logs/